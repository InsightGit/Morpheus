image: insightgit/morpheus

gba-library:
    stage: build
    script:
      - mkdir build
      - cd build
      - echo $DEVKITARM
      - PLATFORM=gba BUILD_TESTS=1 cmake .. -DCMAKE_BUILD_TYPE=Debug
      - cmake --build . --target morpheus
    artifacts:
      name: Morpheus-GBA-$CI_JOB_NAME
      paths:
        - build/*
      when: on_success

nds-library:
  stage: build
  script:
    - mkdir build
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake .. -DCMAKE_BUILD_TYPE=Debug
    - cmake --build . --target morpheus
  artifacts:
    name: Morpheus-GBA-$CI_JOB_NAME
    paths:
      - build/*
    when: on_success

affine-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-affine-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-affine-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-affine-test.gba
    when: on_success

affine-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-affine-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-affine-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-affine-test.nds
    when: on_success

animation-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-animation-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-animation-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-animation-test.gba
    when: on_success

animation-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-animation-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-animation-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-animation-test.nds
    when: on_success

custom-font-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-custom-font-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-custom-font-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-custom-font-test.gba
    when: on_success

custom-font-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-custom-font-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-custom-font-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-custom-font-test.nds
    when: on_success

extended-palette-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-extended-palette-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-extended-palette-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-custom-font-test.nds
    when: on_success

gfx-effects-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-gfx-effects-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-gfx-effects-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-gfx-effects-test.gba
    when: on_success

gfx-effects-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-gfx-effects-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-gfx-effects-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-gfx-effects-test.nds
    when: on_success

input-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-input-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-input-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-input-test.gba
    when: on_success

input-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-input-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-input-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-input-test.nds
    when: on_success

maxmod-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-maxmod-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-maxmod-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-maxmod-test.gba
    when: on_success

maxmod-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-maxmod-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-maxmod-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-maxmod-test.nds
    when: on_success

serial-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-serial-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-serial-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-serial-test.gba
    when: on_success

sram-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-sram-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-sram-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-sram-test.gba
    when: on_success

flash-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-flash-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-flash-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-flash-test.gba
    when: on_success

streaming-background-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-streaming-background-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-streaming-background-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-streaming-background-test.gba
    when: on_success

streaming-background-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-streaming-background-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-streaming-background-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-streaming-background-test.nds
    when: on_success

tileset-test-gba:
  stage: test
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-tileset-test.gba
  dependencies:
    - gba-library
  artifacts:
    name: Morpheus-tileset-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-tileset-test.gba
    when: on_success

tileset-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-tileset-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-tileset-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-tileset-test.nds
    when: on_success

save-test-nds:
  stage: test
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-save-test.nds
  dependencies:
    - nds-library
  artifacts:
    name: Morpheus-tileset-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-tileset-test.nds
    when: on_success

#hayai-game-gba:
#  stage: test
#  script:
#    - mkdir games/hayai/build
#    - cd games/hayai/build
#    - echo $DEVKITARM
#    - PLATFORM=gba cmake .. -DCMAKE_BUILD_TYPE=Debug
#    - cmake --build . --target hayai.gba
#  dependencies:
#    - gba-library
#  artifacts:
#    name: Morpheus-hayai-NDS-$CI_JOB_NAME
#    paths:
#      - games/hayai/build/hayai.gba
#    when: on_success

#hayai-game-nds:
#  stage: test
#  script:
#    - mkdir games/hayai/build
#    - cd games/hayai/build
#    - echo $DEVKITARM
#    - PLATFORM=nds cmake .. -DCMAKE_BUILD_TYPE=Debug
#    - cmake --build . --target hayai.nds
#  dependencies:
#    - nds-library
#  artifacts:
#    name: Morpheus-input-test-NDS-$CI_JOB_NAME
#    paths:
#      - games/hayai/build/hayai.nds
#    when: on_success

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'

pages:
  stage: deploy
  script:
    - rm -rf build
    - mkdir build
    - cd build
    - BUILD_DOCS=1 cmake ..
    - cmake --build . --target Documentation
    - mkdir ../public
    - mv ../docs/_build/html/* ../public
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
