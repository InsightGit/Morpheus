stages:
  - build-library
  - test-GBA
  - test-NDS
  - deploy-docs
  - deploy-dev
  - deploy-release

image: insightgit/morpheus

gba-library:
    stage: build-library
    script:
      - mkdir build
      - cd build
      - echo $DEVKITARM
      - PLATFORM=gba BUILD_TESTS=1 cmake .. -DCMAKE_BUILD_TYPE=Debug
      - cmake --build . --target morpheus
    artifacts:
      name: Morpheus-GBA-$CI_JOB_NAME
      paths:
        - build/*
        - lib/libgba_morpheus.a
      when: on_success

nds-library:
  stage: build-library
  needs: []
  script:
    - mkdir build
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake .. -DCMAKE_BUILD_TYPE=Debug
    - cmake --build . --target morpheus
  artifacts:
    name: Morpheus-NDS-$CI_JOB_NAME
    paths:
      - build/*
      - lib/libnds_morpheus.a
    when: on_success

affine-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-affine-test.gba
  artifacts:
    name: Morpheus-affine-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-affine-test.gba
    when: on_success

affine-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-affine-test.nds
  artifacts:
    name: Morpheus-affine-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-affine-test.nds
    when: on_success

animation-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-animation-test.gba
  artifacts:
    name: Morpheus-animation-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-animation-test.gba
    when: on_success

animation-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-animation-test.nds
  artifacts:
    name: Morpheus-animation-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-animation-test.nds
    when: on_success

custom-font-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-custom-font-test.gba
  artifacts:
    name: Morpheus-custom-font-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-custom-font-test.gba
    when: on_success

custom-font-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-custom-font-test.nds
  artifacts:
    name: Morpheus-custom-font-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-custom-font-test.nds
    when: on_success

extended-palette-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-extended-palette-test.nds
  artifacts:
    name: Morpheus-extended-palette-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-custom-font-test.nds
    when: on_success

gfx-effects-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-gfx-effects-test.gba
  artifacts:
    name: Morpheus-gfx-effects-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-gfx-effects-test.gba
    when: on_success

gfx-effects-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-gfx-effects-test.nds
  artifacts:
    name: Morpheus-gfx-effects-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-gfx-effects-test.nds
    when: on_success

input-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-input-test.gba
  artifacts:
    name: Morpheus-input-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-input-test.gba
    when: on_success

input-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-input-test.nds
  artifacts:
    name: Morpheus-input-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-input-test.nds
    when: on_success

maxmod-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-maxmod-test.gba
  artifacts:
    name: Morpheus-maxmod-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-maxmod-test.gba
    when: on_success

maxmod-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-maxmod-test.nds
  artifacts:
    name: Morpheus-maxmod-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-maxmod-test.nds
    when: on_success

serial-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-serial-test.gba
  artifacts:
    name: Morpheus-serial-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-serial-test.gba
    when: on_success

sram-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-sram-test.gba
  artifacts:
    name: Morpheus-sram-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-sram-test.gba
    when: on_success

flash-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-flash-test.gba
  artifacts:
    name: Morpheus-flash-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-flash-test.gba
    when: on_success

streaming-background-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-streaming-background-test.gba
  artifacts:
    name: Morpheus-streaming-background-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-streaming-background-test.gba
    when: on_success

streaming-background-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-streaming-background-test.nds
  artifacts:
    name: Morpheus-streaming-background-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-streaming-background-test.nds
    when: on_success

tileset-test-gba:
  stage: test-GBA
  needs: [gba-library]
  script:
    - cd build
    - PLATFORM=gba BUILD_TESTS=1 cmake --build . --target morpheus-gba-tileset-test.gba
  artifacts:
    name: Morpheus-tileset-test-GBA-$CI_JOB_NAME
    paths:
      - build/morpheus-gba-tileset-test.gba
    when: on_success

tileset-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-tileset-test.nds
  artifacts:
    name: Morpheus-tileset-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-tileset-test.nds
    when: on_success

save-test-nds:
  stage: test-NDS
  needs: [nds-library]
  script:
    - cd build
    - PLATFORM=nds BUILD_TESTS=1 cmake --build . --target morpheus-nds-save-test.nds
  artifacts:
    name: Morpheus-tileset-test-NDS-$CI_JOB_NAME
    paths:
      - build/morpheus-nds-tileset-test.nds
    when: on_success

#hayai-game-gba:
#  stage: test
#  script:
#    - mkdir games/hayai/build
#    - cd games/hayai/build
#    - echo $DEVKITARM
#    - PLATFORM=gba cmake .. -DCMAKE_BUILD_TYPE=Debug
#    - cmake --build . --target hayai.gba
#  dependencies:
#    - gba-library
#  artifacts:
#    name: Morpheus-hayai-NDS-$CI_JOB_NAME
#    paths:
#      - games/hayai/build/hayai.gba
#    when: on_success

#hayai-game-nds:
#  stage: test
#  script:
#    - mkdir games/hayai/build
#    - cd games/hayai/build
#    - echo $DEVKITARM
#    - PLATFORM=nds cmake .. -DCMAKE_BUILD_TYPE=Debug
#    - cmake --build . --target hayai.nds
#  dependencies:
#    - nds-library
#  artifacts:
#    name: Morpheus-input-test-NDS-$CI_JOB_NAME
#    paths:
#      - games/hayai/build/hayai.nds
#    when: on_succes

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'

pages:
  stage: deploy-docs
  needs: [gba-library, nds-library]
  script:
    - rm -rf build
    - mkdir build
    - cd build
    - BUILD_DOCS=1 cmake ..
    - cmake --build . --target Documentation
    - mkdir ../public
    - mv ../docs/_build/html/* ../public
  artifacts:
    paths:
      - public

deploy_dev:
  stage: deploy-dev
  needs: [pages, save-test-nds, tileset-test-nds, tileset-test-gba,
          streaming-background-test-nds, streaming-background-test-gba,
          flash-test-gba, sram-test-gba, serial-test-gba, maxmod-test-nds,
          maxmod-test-gba, input-test-nds, input-test-gba, gfx-effects-test-nds,
          gfx-effects-test-gba, extended-palette-test-nds, custom-font-nds,
          custom-font-gba, animation-test-nds, animation-test-gba, affine-test-nds,
          affine-test-gba, gba-library, nds-library]
  script:
    - chmod +x buildtools/generate_cd_release/generate_cd_release.sh
    - bash -x buildtools/generate_cd_release/generate_cd_release.sh dev
  environment:
    name: dev
    url: https://insighted.itch.io/morpheus
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'

deploy_release:
  stage: deploy-release
  needs: [ pages, save-test-nds, tileset-test-nds, tileset-test-gba,
           streaming-background-test-nds, streaming-background-test-gba,
           flash-test-gba, sram-test-gba, serial-test-gba, maxmod-test-nds,
           maxmod-test-gba, input-test-nds, input-test-gba, gfx-effects-test-nds,
           gfx-effects-test-gba, extended-palette-test-nds, custom-font-nds,
           custom-font-gba, animation-test-nds, animation-test-gba, affine-test-nds,
           affine-test-gba, gba-library, nds-library ]
  script:
    - chmod +x buildtools/generate_cd_release/generate_cd_release.sh
    - bash -x buildtools/generate_cd_release/generate_cd_release.sh release
  environment:
    name: dev
    url: https://insighted.itch.io/morpheus
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Morpheus release build'
    tag_name: '$CI_COMMIT_TAG'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
